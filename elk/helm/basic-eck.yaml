# ref: https://raw.githubusercontent.com/elastic/cloud-on-k8s/2.14/deploy/eck-stack/examples/logstash/basic-eck.yaml
eck-elasticsearch:
  enabled: true
  version: 8.15.2
  fullnameOverride: elasticsearch
  nodeSets:
    - name: default
      count: 1
      config:
        # Remove the following line for production, https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html
        node.store.allow_mmap: false
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 30Gi
      podTemplate:
        spec:
#          initContainers:
#            - name: sysctl
#              securityContext:
#                privileged: true
#                runAsUser: 0
#              command: [ 'sh', '-c', 'sysctl -w vm.max_map_count=262144' ]
          containers:
            - name: elasticsearch
              resources:
                limits:
                  memory: 2Gi
                requests:
                  memory: 2Gi
eck-kibana:
  enabled: true
  version: 8.15.2
  fullnameOverride: kibana
  spec:
    count: 1
    elasticsearchRef:
      name: elasticsearch
  config:  # refer: https://www.elastic.co/guide/en/kibana/current/settings.html
    server:
      publicBaseUrl: "https://monitor.example.com"
    i18n:
      locale: "zh-CN" # Default language is en
  http:
    service:
      metadata:
        annotations:
          # This is required for `ClusterIP` services (which are the default ECK service type) to be used with Ingress in GKE clusters.
          cloud.google.com/neg: '{"ingress": true}'
          cloud.google.com/app-protocols: '{"https":"HTTPS"}'
          cloud.google.com/backend-config: '{"default": "kibana"}'
  ingress:
    enabled: true
    pathType: Prefix
    hosts:
      - host: "monitor.example.com"
        path: "/"
eck-beats:
  enabled: true
  version: 8.15.2
  fullnameOverride: beats
  spec:
    type: filebeat
    daemonSet: null
    config:
      filebeat.inputs:
        - type: log
          paths:
            - /data/logstash-tutorial.log
      processors:
        - add_host_metadata: {}
        - add_cloud_metadata: {}
      output.logstash:
        # This needs to be {{logstash-name}}-ls-beats:5044
        hosts: ["logstash-ls-beats-ls-beats:5044"]
    deployment:
      podTemplate:
        spec:
          automountServiceAccountToken: true
          initContainers:
            - name: download-tutorial
              image: curlimages/curl
              imagePullPolicy: IfNotPresent
              command: ["/bin/sh"]
              args: ["-c", "curl -L https://download.elastic.co/demos/logstash/gettingstarted/logstash-tutorial.log.gz | gunzip -c > /data/logstash-tutorial.log"]
              volumeMounts:
                - name: data
                  mountPath: /data
          containers:
            - name: filebeat
              securityContext:
                runAsUser: 1000
              volumeMounts:
                - name: data
                  mountPath: /data
                - name: beat-data
                  mountPath: /usr/share/filebeat/data
          volumes:
            - name: data
              emptydir: {}
            - name: beat-data
              emptydir: {}
eck-logstash:
  enabled: true
  version: 8.15.2
  fullnameOverride: "logstash-ls-beats"
  elasticsearchRefs:
    - clusterName: eck
      name: elasticsearch
  pipelines:
    - pipeline.id: main
      config.string: |
        input {
          beats {
            port => 5044
          }
        }
        filter {
          grok {
            match => { "message" => "%{HTTPD_COMMONLOG}"}
          }
          geoip {
            source => "[source][address]"
            target => "[source]"
          }
        }
        output {
          elasticsearch {
            hosts => [ "${ECK_ES_HOSTS}" ]
            user => "${ECK_ES_USER}"
            password => "${ECK_ES_PASSWORD}"
            ssl_certificate_authorities => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
          }
        }
  services:
    - name: beats
      service:
        spec:
          type: ClusterIP
          ports:
            - port: 5044
              name: "filebeat"
              protocol: TCP
              targetPort: 5044
